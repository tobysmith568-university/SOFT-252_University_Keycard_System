/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import Control.Data;
import Control.Log;
import Locations.Building;
import Locations.Campus;
import Locations.Floor;
import Locations.Room;
import javax.swing.DefaultListModel;

/**
 *
 * @author Student
 */
public class MainWindow extends javax.swing.JFrame {
    
    private DefaultListModel campusListModel;
    private DefaultListModel buildingListModel;
    private DefaultListModel floorListModel;
    private DefaultListModel roomListModel;

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        
        campusListModel = new DefaultListModel();
        buildingListModel = new DefaultListModel();
        floorListModel = new DefaultListModel();
        roomListModel = new DefaultListModel();
        
        Data data = Data.LoadState("Current.state");
        
        RefreshCampusListModel();
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstRooms = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstCampuses = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstBuildings = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstFloors = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lstRooms.setModel(roomListModel);
        jScrollPane1.setViewportView(lstRooms);

        lstCampuses.setModel(campusListModel);
        lstCampuses.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstCampusesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(lstCampuses);

        lstBuildings.setModel(buildingListModel);
        lstBuildings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstBuildingsMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(lstBuildings);

        lstFloors.setModel(floorListModel);
        lstFloors.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstFloorsMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(lstFloors);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                        .addGap(44, 44, 44)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(52, 52, 52))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(377, 377, 377)
                .addComponent(jButton1)
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lstCampusesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstCampusesMouseClicked
        RefreshBuildingListViewModel();
    }//GEN-LAST:event_lstCampusesMouseClicked

    private void lstBuildingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstBuildingsMouseClicked
        RefreshFloorListViewModel();
    }//GEN-LAST:event_lstBuildingsMouseClicked

    private void lstFloorsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstFloorsMouseClicked
        RefreshRoomListViewModel();
    }//GEN-LAST:event_lstFloorsMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Data.SaveState("Current.state", Data.allCampuses, Data.allKeycards);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<String> lstBuildings;
    private javax.swing.JList<String> lstCampuses;
    private javax.swing.JList<String> lstFloors;
    private javax.swing.JList<String> lstRooms;
    // End of variables declaration//GEN-END:variables

    private void RefreshCampusListModel() {
        campusListModel.clear();
        Data.allCampuses.values().forEach((campus) -> {
            campusListModel.addElement(campus.GetName());
        });
    }

    private void RefreshBuildingListViewModel() {
        buildingListModel.clear();
        Campus selectedCampus = Data.allCampuses.get(lstCampuses.getSelectedValue());
        
        for(Building building : selectedCampus.GetAllChildren()){
            buildingListModel.addElement(building.GetName());
        }
        
        lstFloors.clearSelection();
        lstRooms.clearSelection();
    }

    private void RefreshFloorListViewModel() {
        floorListModel.clear();
        Campus selectedCampus = Data.allCampuses.get(lstCampuses.getSelectedValue());
        Building selectedBuilding = selectedCampus.GetChild(lstBuildings.getSelectedValue());
        
        for(Floor floor : selectedBuilding.GetAllChildren()){
            floorListModel.addElement(floor.GetFloorNumber());
        }        
        
        lstRooms.clearSelection();
    }

    private void RefreshRoomListViewModel() {
        roomListModel.clear();
        Campus selectedCampus = Data.allCampuses.get(lstCampuses.getSelectedValue());
        Building selectedBuilding = selectedCampus.GetChild(lstBuildings.getSelectedValue());
        Floor selectedFloor = selectedBuilding.GetChild(lstFloors.getSelectedValue());
        
        for(Room room : selectedFloor.GetAllChildren()){
            roomListModel.addElement(selectedFloor.GetFloorNumber() + room.GetNumber() + " (" + room.GetRoomType() + ")");
        }
    }
}
